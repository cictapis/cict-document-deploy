"use strict";(self.webpackChunkcict_document=self.webpackChunkcict_document||[]).push([[9671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||r;return n?i.createElement(g,o(o({ref:t},d),{},{components:n})):i.createElement(g,o({ref:t},d))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var i=n(7462),a=(n(7294),n(3905));const r={id:"intro",title:"Cict introduction",sidebar_label:"Cict introduction",sidebar_position:1},o="Cict introduction",s={unversionedId:"intro",id:"intro",title:"Cict introduction",description:"This guide was generated by ChatGPT. All content in this guide was generated by ChatGPT and should not be considered as professional advice or recommendations. Use at your own risk.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/cict-document-deploy/docs/intro",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"intro",title:"Cict introduction",sidebar_label:"Cict introduction",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Getting Starteds",permalink:"/cict-document-deploy/docs/getting-started"}},l={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Overview of the System",id:"overview-of-the-system",level:2},{value:"Conclusion",id:"conclusion",level:2}],d={toc:c},u="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cict-introduction"},"Cict introduction"),(0,a.kt)("admonition",{type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"This guide was generated by ChatGPT. All content in this guide was generated by ChatGPT and should not be considered as professional advice or recommendations. Use at your own risk.")),(0,a.kt)("h1",{id:"introduction-to-golang-based-microservices-with-grpc-deployed-in-kubernetes-and-istio"},"Introduction to Golang-based Microservices with gRPC, Deployed in Kubernetes and Istio"),(0,a.kt)("p",null,"Welcome to this guide on building Golang-based microservices with gRPC, and deploying them in a scalable and reliable manner with Kubernetes and Istio. This guide is designed to help you learn and understand how to build and deploy microservices using Golang and gRPC, as well as cover all the necessary prerequisites that are required for building the system."),(0,a.kt)("p",null,"In addition to building microservices using Golang and gRPC, this guide will also cover the following topics:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use of Kubernetes for container orchestration"),(0,a.kt)("li",{parentName:"ul"},"Use of Istio as a service mesh for traffic management and security"),(0,a.kt)("li",{parentName:"ul"},"Integration with Open edX platform"),(0,a.kt)("li",{parentName:"ul"},"Authentication and academic services"),(0,a.kt)("li",{parentName:"ul"},"Kafka gateway and Kafka listener service"),(0,a.kt)("li",{parentName:"ul"},"Use of MySQL, Redis, and Kafka")),(0,a.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"To get the most out of this guide, you should have a basic understanding of the following concepts:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Golang programming language"),(0,a.kt)("li",{parentName:"ul"},"Microservices architecture and design principles"),(0,a.kt)("li",{parentName:"ul"},"Kubernetes and containerization"),(0,a.kt)("li",{parentName:"ul"},"gRPC and its advantages"),(0,a.kt)("li",{parentName:"ul"},"Bazel for building the protocol buffer"),(0,a.kt)("li",{parentName:"ul"},"Istio as a service mesh for traffic management and security"),(0,a.kt)("li",{parentName:"ul"},"Open edX platform"),(0,a.kt)("li",{parentName:"ul"},"MySQL, Redis, and Kafka")),(0,a.kt)("p",null,"If you are not familiar with these concepts, don't worry! We will cover them in detail throughout the guide to ensure that you have a thorough understanding of each topic before moving on to the next."),(0,a.kt)("h2",{id:"overview-of-the-system"},"Overview of the System"),(0,a.kt)("p",null,"The system that we will be building consists of Golang-based microservices that communicate with each other using gRPC. The microservices will be deployed in Kubernetes clusters and managed with Istio, a service mesh that provides service discovery, load balancing, and traffic management capabilities. The system will also include the following services:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Authentication service that handles user authentication and authorization using MySQL and Redis."),(0,a.kt)("li",{parentName:"ul"},"Academic service that handles user academic data using MySQL."),(0,a.kt)("li",{parentName:"ul"},"Kafka gateway service that sends messages to a Kafka topic."),(0,a.kt)("li",{parentName:"ul"},"Kafka listener service that listens to the Kafka topic and processes incoming messages.")),(0,a.kt)("p",null,"In addition, the system will be integrated with Open edX, an open-source learning platform that provides a comprehensive set of tools for creating and delivering online courses. This integration will enable the system to provide a seamless learning experience for users."),(0,a.kt)("p",null,"All microservices will be built using Bazel, which is a fast and efficient build system that supports a wide range of programming languages."),(0,a.kt)("h2",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"This guide provides an introduction to building Golang-based microservices with gRPC, and deploying them in Kubernetes clusters managed by Istio. In addition to the core microservices, we will also cover the use of MySQL, Redis, and Kafka for building authentication, academic, Kafka gateway, and Kafka listener services. By following the steps outlined in this guide, you will be able to build and deploy scalable and reliable microservices using Golang and gRPC, and integrate them with Open edX."))}p.isMDXComponent=!0}}]);