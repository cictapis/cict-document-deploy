"use strict";(self.webpackChunkcict_document=self.webpackChunkcict_document||[]).push([[5430],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>g});var i=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,i)}return o}function s(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,i,n=function(e,t){if(null==e)return{};var o,i,n={},r=Object.keys(e);for(i=0;i<r.length;i++)o=r[i],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)o=r[i],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=i.createContext({}),c=function(e){var t=i.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):s(s({},t),e)),o},u=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var o=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(o),m=n,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return o?i.createElement(g,s(s({ref:t},u),{},{components:o})):i.createElement(g,s({ref:t},u))}));function g(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=o.length,s=new Array(r);s[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[p]="string"==typeof e?e:n,s[1]=a;for(var c=2;c<r;c++)s[c]=o[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,o)}m.displayName="MDXCreateElement"},4604:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=o(87462),n=(o(67294),o(3905));const r={id:"rules_proto_grpc",title:"Rules Proto gRPC",sidebar_label:"Rules Proto gRPC",sidebar_position:3},s=void 0,a={unversionedId:"topics/rules_proto_grpc",id:"version-1.0.0/topics/rules_proto_grpc",title:"Rules Proto gRPC",description:"This guide was generated by ChatGPT. All content in this guide was generated by ChatGPT and should not be considered as professional advice or recommendations. Use at your own risk.",source:"@site/versioned_docs/version-1.0.0/topics/rules_proto_grpc.md",sourceDirName:"topics",slug:"/topics/rules_proto_grpc",permalink:"/cict-document-deploy/docs/topics/rules_proto_grpc",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0.0/topics/rules_proto_grpc.md",tags:[],version:"1.0.0",sidebarPosition:3,frontMatter:{id:"rules_proto_grpc",title:"Rules Proto gRPC",sidebar_label:"Rules Proto gRPC",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Protobuf FieldMask",permalink:"/cict-document-deploy/docs/topics/protobuf_fieldmask"},next:{title:"Json Transcoder",permalink:"/cict-document-deploy/docs/topics/json_transcoder"}},l={},c=[{value:"Introduction",id:"introduction",level:3},{value:"Key Features",id:"key-features",level:3},{value:"Flexible Policy Definition",id:"flexible-policy-definition",level:4},{value:"Integration with gRPC",id:"integration-with-grpc",level:4},{value:"Customizable Policy Enforcement",id:"customizable-policy-enforcement",level:4},{value:"Easy to Use",id:"easy-to-use",level:4},{value:"How it Works",id:"how-it-works",level:4},{value:"Getting Started",id:"getting-started",level:3},{value:"Conclusion",id:"conclusion",level:3},{value:"References",id:"references",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(p,(0,i.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"This guide was generated by ChatGPT. All content in this guide was generated by ChatGPT and should not be considered as professional advice or recommendations. Use at your own risk.")),(0,n.kt)("p",null,"Rules Proto gRPC is an open source project that provides a way to write rules for policy enforcement in gRPC-based microservices. It allows you to define policies using Protocol Buffers, which can be easily integrated into your gRPC server and client implementations."),(0,n.kt)("h3",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,"The popularity of gRPC-based microservices has skyrocketed in recent years. This is primarily because gRPC provides a fast and efficient way to communicate between microservices. However, with the increasing number of microservices, managing and enforcing policies for these services has become more challenging."),(0,n.kt)("p",null,"This is where Rules Proto gRPC comes into play. It is a tool that enables policy enforcement in gRPC-based microservices. Rules Proto gRPC allows developers to define rules using Protocol Buffers, which is a language- and platform-neutral mechanism for serializing structured data. This makes it easy to define policies that can be integrated into existing gRPC server and client implementations."),(0,n.kt)("h3",{id:"key-features"},"Key Features"),(0,n.kt)("p",null,"Rules Proto gRPC provides several key features that make it an excellent tool for policy enforcement in gRPC-based microservices."),(0,n.kt)("h4",{id:"flexible-policy-definition"},"Flexible Policy Definition"),(0,n.kt)("p",null,"Policies can be defined using Protocol Buffers, which provides a flexible and scalable approach to policy enforcement. This means that you can define policies that are tailored to the specific needs of your microservices."),(0,n.kt)("h4",{id:"integration-with-grpc"},"Integration with gRPC"),(0,n.kt)("p",null,"Rules Proto gRPC is designed to be easily integrated into existing gRPC server and client implementations. This makes it easy to enforce policies on gRPC requests and responses."),(0,n.kt)("h4",{id:"customizable-policy-enforcement"},"Customizable Policy Enforcement"),(0,n.kt)("p",null,"Rules can be customized to meet the specific needs of your microservices. This means that you can define policies that are tailored to the specific requirements of your microservices."),(0,n.kt)("h4",{id:"easy-to-use"},"Easy to Use"),(0,n.kt)("p",null,"Rules Proto gRPC is designed to be easy to use. It comes with clear documentation and examples that make it easy to get started with policy enforcement in gRPC-based microservices."),(0,n.kt)("h4",{id:"how-it-works"},"How it Works"),(0,n.kt)("p",null,"Rules Proto gRPC works by allowing developers to define policies using Protocol Buffers. These policies can be defined in a separate .proto file and then compiled into code that can be integrated into existing gRPC server and client implementations."),(0,n.kt)("p",null,"When a gRPC call is made, the server-side implementation can use the compiled policies to enforce policies on the request and response messages. The client-side implementation can also use the compiled policies to ensure that requests are compliant with the policies defined in the rules."),(0,n.kt)("h3",{id:"getting-started"},"Getting Started"),(0,n.kt)("p",null,"To get started with Rules Proto gRPC, you will need to have some experience with Protocol Buffers and gRPC. If you are new to these technologies, it is recommended that you first familiarize yourself with them before attempting to use Rules Proto gRPC."),(0,n.kt)("p",null,"Once you have some experience with Protocol Buffers and gRPC, you can download the project from the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/rules-proto-grpc/rules_proto_grpc"},"GitHub repository"),". The repository contains all the necessary information to build and run the project, including documentation and examples."),(0,n.kt)("p",null,"After downloading the project, you can start defining your policies using Protocol Buffers. You can define policies for both client and server-side enforcement. You can also define policies that are specific to your microservices and their requirements."),(0,n.kt)("p",null,"Once you have defined your policies, you can compile them into code that can be integrated into your gRPC server and client implementations. The compiled code will contain the necessary logic for policy enforcement."),(0,n.kt)("p",null,"To integrate the compiled policies into your gRPC server and client implementations, you will need to follow the instructions provided in the documentation. This will typically involve importing the compiled policies into your project and using them to enforce policies on requests and responses."),(0,n.kt)("h3",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"Rules Proto gRPC is a powerful tool for policy enforcement in gRPC-based microservices. It provides a flexible and scalable approach to policy enforcement by allowing developers to define policies using Protocol Buffers. With its easy integration with existing gRPC server and client implementations, developers can quickly and easily enforce policies on gRPC requests and responses. If you're looking for a tool to help manage and enforce policies in your gRPC-based microservices, Rules Proto gRPC is definitely worth checking out."),(0,n.kt)("h3",{id:"references"},"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/rules-proto-grpc/rules-proto-grpc"},"Rules Proto gRPC GitHub Repository")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developers.google.com/protocol-buffers"},"Protocol Buffers Documentation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://grpc.io/docs/"},"gRPC Documentation")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cloud.google.com/blog/products/api-management/securing-your-grpc-apis"},'"Securing Your gRPC APIs" by Daniel Martins, Google Cloud Blog')),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://cloud.google.com/blog/products/containers-kubernetes/authentication-and-authorization-with-grpc-and-istio"},'"Authentication and Authorization with gRPC and Istio" by Lizan Zhou, Google Cloud Blog'))))}d.isMDXComponent=!0}}]);